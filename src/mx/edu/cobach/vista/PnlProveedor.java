/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.edu.cobach.vista;

import java.awt.Color;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import mx.edu.cobach.persistencia.entidades.Empleado;
import mx.edu.cobach.persistencia.entidades.Evento;
import mx.edu.cobach.persistencia.entidades.Proveedor;
import mx.edu.cobach.vista.controlador.HelperEntidad;
import mx.edu.cobach.vista.controlador.ProveedorControlador;

/**
 *
 * @author liuts
 */
public class PnlProveedor extends javax.swing.JPanel implements Comunicador{

    private final DefaultTableModel model,modelEventos;
    private final String[] titulosTabla;
    private final ProveedorControlador control;
    private final String[] titulosEventos;
    private int idProveedorActual;
    private final boolean guardando=false;
    private KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
    private String primerNombre="";
    private String segundoNombre="";
    private String apellidoPaterno="";
    private String apellidoMaterno="";
    private Border BORDER_ORIGINAL;
    private boolean buscando = false;
    private boolean problema = false;
    private boolean almacenando = false;
    private Capacisoft capacisoft;
    
    
    public PnlProveedor(Capacisoft capacisoft) {
        initComponents();
        titulosTabla= new String[]{"Número", "Nombre", "Eliminar"};
        titulosEventos= new String[]{"Número","Evento","Tipo"};
        this.capacisoft = capacisoft;
        
        model = new DefaultTableModel(titulosTabla, 3);
        proveedoresTbl.setModel(model);
        proveedoresTbl.setColumnSelectionAllowed(false);
        proveedoresTbl.setDragEnabled(false);
        
        control = new ProveedorControlador(this,Proveedor.class);
        
        informacionTBn.setEnabledAt(0, true);
        informacionTBn.setEnabledAt(1, false);
        informacionTBn.setSelectedIndex(0);
        
        modelEventos = new DefaultTableModel(titulosEventos, 0);
        eventosTbl.setModel(modelEventos);
        eventosTbl.setColumnSelectionAllowed(false);
        eventosTbl.setDragEnabled(false);
        eventosTbl.setCellSelectionEnabled(false);
        
        /**
         * Metodo que sirve para validar que solo se admitan letras mayusculas
         * en los campos de texto.
         */
        manager.addKeyEventDispatcher(new KeyEventDispatcher(){
            public boolean dispatchKeyEvent(KeyEvent e) {
                if(e.getID() == KeyEvent.KEY_TYPED){
                    if(e.getKeyChar() >= 'a' && e.getKeyChar() <= 'z'){
                        e.setKeyChar((char)(((int)e.getKeyChar()) - 32));
                    }
                }
                return false;
            }
        });
        
        BORDER_ORIGINAL = primerNombreTFd.getBorder();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcionPnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        proveedoresTbl = new javax.swing.JTable();
        buscarBtn = new javax.swing.JButton();
        nombreBuscarTFd = new javax.swing.JTextField();
        nombreLBuscarbl = new javax.swing.JLabel();
        agregarBtn = new javax.swing.JButton();
        opcionesLbl = new javax.swing.JLabel();
        opcionMsjLbl = new javax.swing.JLabel();
        tablaMsjLbl = new javax.swing.JLabel();
        informacionTBn = new javax.swing.JTabbedPane();
        informacionPnl = new javax.swing.JPanel();
        primerNombreLbl = new javax.swing.JLabel();
        primerNombreTFd = new javax.swing.JTextField();
        tipoLbl = new javax.swing.JLabel();
        telefonoLbl = new javax.swing.JLabel();
        telefonoTFd = new javax.swing.JTextField();
        internoRBtn = new javax.swing.JRadioButton();
        externoRBtn = new javax.swing.JRadioButton();
        correoLbl = new javax.swing.JLabel();
        correoTFd = new javax.swing.JTextField();
        siguienteBtn = new javax.swing.JButton();
        agregarLbl = new javax.swing.JLabel();
        agregarMsjLbl = new javax.swing.JLabel();
        segundoNombreTFd = new javax.swing.JTextField();
        segundoNombreLbl = new javax.swing.JLabel();
        apellidoPaternoTFd = new javax.swing.JTextField();
        apellidoPaternoLbl = new javax.swing.JLabel();
        apellidoMaternoTFd = new javax.swing.JTextField();
        apellidoMaternoLbl = new javax.swing.JLabel();
        validNomLbl = new javax.swing.JLabel();
        validApePatLbl = new javax.swing.JLabel();
        validApeMatLbl = new javax.swing.JLabel();
        validCorreoLbl = new javax.swing.JLabel();
        validTelefonoLbl = new javax.swing.JLabel();
        cancelarBtn = new javax.swing.JButton();
        listaPnl1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        eventosTbl = new javax.swing.JTable();
        guardarLABtn = new javax.swing.JButton();
        agregarLALbl = new javax.swing.JLabel();
        nota_LI_Lbl = new javax.swing.JLabel();
        seleccionLALbl = new javax.swing.JLabel();
        buscarLABtn = new javax.swing.JButton();
        listaAsistenciaLALbl = new javax.swing.JLabel();
        cancelarLABtn = new javax.swing.JButton();
        devolverLABtn = new javax.swing.JButton();
        totalEmpleadosLbl = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1200, 587));

        opcionPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        opcionPnl.setMaximumSize(new java.awt.Dimension(408, 587));
        opcionPnl.setMinimumSize(new java.awt.Dimension(408, 587));
        opcionPnl.setPreferredSize(new java.awt.Dimension(408, 587));

        proveedoresTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Clave", "Nombre", "Eliminar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        proveedoresTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proveedoresTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(proveedoresTbl);
        if (proveedoresTbl.getColumnModel().getColumnCount() > 0) {
            proveedoresTbl.getColumnModel().getColumn(0).setResizable(false);
            proveedoresTbl.getColumnModel().getColumn(1).setResizable(false);
            proveedoresTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        buscarBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buscarBtn.setText("Buscar");
        buscarBtn.setActionCommand("Busca");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        nombreBuscarTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nombreLBuscarbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreLBuscarbl.setText("Nombre del Proveedor:");

        agregarBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        agregarBtn.setText("Agregar");
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });

        opcionesLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opcionesLbl.setText("Opciones ");

        opcionMsjLbl.setText("<html>Seleccione el botón \"Agregar\" para habilitar la sección de registro,<br>si desea  realizar una búsqueda seleccione el botón \"Buscar\"</html>");

        tablaMsjLbl.setText("<html>Para Modificar seleccione un nombre del proveedor de la columna<br> \"Nombre\", para eliminar selecciona el cuadro eliminar de la columna Eliminar del usuario que desee</html> ");

        javax.swing.GroupLayout opcionPnlLayout = new javax.swing.GroupLayout(opcionPnl);
        opcionPnl.setLayout(opcionPnlLayout);
        opcionPnlLayout.setHorizontalGroup(
            opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(opcionPnlLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(opcionPnlLayout.createSequentialGroup()
                                .addComponent(agregarBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(opcionPnlLayout.createSequentialGroup()
                                .addGroup(opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(opcionMsjLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(opcionesLbl))
                                .addGap(0, 59, Short.MAX_VALUE))
                            .addGroup(opcionPnlLayout.createSequentialGroup()
                                .addComponent(nombreLBuscarbl, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nombreBuscarTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(opcionPnlLayout.createSequentialGroup()
                        .addComponent(tablaMsjLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        opcionPnlLayout.setVerticalGroup(
            opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionPnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(opcionesLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opcionMsjLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLBuscarbl)
                    .addComponent(nombreBuscarTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(opcionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarBtn)
                    .addComponent(buscarBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tablaMsjLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        informacionTBn.setMaximumSize(new java.awt.Dimension(767, 587));
        informacionTBn.setMinimumSize(new java.awt.Dimension(767, 587));
        informacionTBn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                informacionTBnStateChanged(evt);
            }
        });
        informacionTBn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                informacionTBnMouseClicked(evt);
            }
        });

        informacionPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        informacionPnl.setMaximumSize(new java.awt.Dimension(767, 394));
        informacionPnl.setMinimumSize(new java.awt.Dimension(767, 394));
        informacionPnl.setPreferredSize(new java.awt.Dimension(786, 425));

        primerNombreLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        primerNombreLbl.setText("Primer nombre:");

        primerNombreTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        primerNombreTFd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                primerNombreTFdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                primerNombreTFdFocusLost(evt);
            }
        });

        tipoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tipoLbl.setText("Tipo de proveedor:");

        telefonoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        telefonoLbl.setText("Teléfono :");

        telefonoTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        telefonoTFd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                telefonoTFdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                telefonoTFdFocusLost(evt);
            }
        });

        internoRBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        internoRBtn.setText("Interno");
        internoRBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                internoRBtnMouseClicked(evt);
            }
        });

        externoRBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        externoRBtn.setSelected(true);
        externoRBtn.setText("Externo");
        externoRBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                externoRBtnMouseClicked(evt);
            }
        });

        correoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        correoLbl.setText("Correo electrónico :");

        correoTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        correoTFd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                correoTFdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                correoTFdFocusLost(evt);
            }
        });

        siguienteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        siguienteBtn.setText("Siguiente");
        siguienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteBtnActionPerformed(evt);
            }
        });

        agregarLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agregarLbl.setText("Registro");

        agregarMsjLbl.setText("<html>Ingrese la información a almacenar, para salir o cancelar el registro presione el botón \"Cancelar\"</html>");

        segundoNombreTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        segundoNombreLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        segundoNombreLbl.setText("Segundo nombre:");

        apellidoPaternoTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        apellidoPaternoTFd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                apellidoPaternoTFdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                apellidoPaternoTFdFocusLost(evt);
            }
        });

        apellidoPaternoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        apellidoPaternoLbl.setText("Apellido paterno:");

        apellidoMaternoTFd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        apellidoMaternoTFd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                apellidoMaternoTFdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                apellidoMaternoTFdFocusLost(evt);
            }
        });

        apellidoMaternoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        apellidoMaternoLbl.setText("Apellido materno:");

        validNomLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validNomLbl.setForeground(new java.awt.Color(213, 216, 222));
        validNomLbl.setText("Este campo es obligatorio");

        validApePatLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validApePatLbl.setForeground(new java.awt.Color(213, 216, 222));
        validApePatLbl.setText("Este campo es obligatorio");

        validApeMatLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validApeMatLbl.setForeground(new java.awt.Color(213, 216, 222));
        validApeMatLbl.setText("Este campo es obligatorio");

        validCorreoLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validCorreoLbl.setForeground(new java.awt.Color(213, 216, 222));
        validCorreoLbl.setText("Este campo es obligatorio");

        validTelefonoLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        validTelefonoLbl.setForeground(new java.awt.Color(213, 216, 222));
        validTelefonoLbl.setText("Este campo es obligatorio");

        cancelarBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelarBtn.setText("Cancelar");
        cancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout informacionPnlLayout = new javax.swing.GroupLayout(informacionPnl);
        informacionPnl.setLayout(informacionPnlLayout);
        informacionPnlLayout.setHorizontalGroup(
            informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informacionPnlLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(informacionPnlLayout.createSequentialGroup()
                            .addComponent(tipoLbl)
                            .addGap(30, 30, 30)
                            .addComponent(internoRBtn)
                            .addGap(42, 42, 42)
                            .addComponent(externoRBtn))
                        .addComponent(agregarMsjLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionPnlLayout.createSequentialGroup()
                            .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(segundoNombreLbl)
                                .addComponent(primerNombreLbl)
                                .addComponent(apellidoPaternoLbl))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(primerNombreTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(segundoNombreTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(validNomLbl)
                                .addComponent(validApePatLbl)
                                .addComponent(apellidoPaternoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionPnlLayout.createSequentialGroup()
                            .addComponent(apellidoMaternoLbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(validApeMatLbl)
                                .addComponent(apellidoMaternoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(informacionPnlLayout.createSequentialGroup()
                            .addComponent(correoLbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                            .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(validCorreoLbl)
                                .addComponent(correoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionPnlLayout.createSequentialGroup()
                            .addComponent(telefonoLbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(validTelefonoLbl)
                                .addComponent(telefonoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(agregarLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(227, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(siguienteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        informacionPnlLayout.setVerticalGroup(
            informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informacionPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agregarLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(agregarMsjLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(primerNombreLbl)
                    .addComponent(primerNombreTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validNomLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(segundoNombreLbl)
                    .addComponent(segundoNombreTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidoPaternoLbl)
                    .addComponent(apellidoPaternoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validApePatLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidoMaternoLbl)
                    .addComponent(apellidoMaternoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validApeMatLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(correoLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validCorreoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonoLbl)
                    .addComponent(telefonoTFd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(informacionPnlLayout.createSequentialGroup()
                        .addComponent(validTelefonoLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(informacionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipoLbl)
                            .addComponent(internoRBtn)
                            .addComponent(externoRBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(siguienteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cancelarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        informacionTBn.addTab("General", informacionPnl);

        eventosTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Numero del empleado", "Nombre del empleado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        eventosTbl.setEnabled(false);
        jScrollPane5.setViewportView(eventosTbl);

        guardarLABtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guardarLABtn.setText("Guardar");
        guardarLABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarLABtnActionPerformed(evt);
            }
        });

        agregarLALbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agregarLALbl.setText("Registro");

        nota_LI_Lbl.setText("<html>Ingrese la información a almacenar, para salir o cancelar el registro presione el botón \"Cancelar\"</html>");

        seleccionLALbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seleccionLALbl.setText("Seleccione la opcion de generar lista de eventos para agregar los eventos que el proveedor puede impartir");

        buscarLABtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buscarLABtn.setText("Generar lista de eventos");
        buscarLABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarLABtnActionPerformed(evt);
            }
        });

        listaAsistenciaLALbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        listaAsistenciaLALbl.setText("Lista de eventos");

        cancelarLABtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelarLABtn.setText("Cancelar");
        cancelarLABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarLABtnActionPerformed(evt);
            }
        });

        devolverLABtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        devolverLABtn.setText("Regresar");
        devolverLABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverLABtnActionPerformed(evt);
            }
        });

        totalEmpleadosLbl.setText("Total de eventos en la lista:");

        javax.swing.GroupLayout listaPnl1Layout = new javax.swing.GroupLayout(listaPnl1);
        listaPnl1.setLayout(listaPnl1Layout);
        listaPnl1Layout.setHorizontalGroup(
            listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaPnl1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaPnl1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(devolverLABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelarLABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(guardarLABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(listaPnl1Layout.createSequentialGroup()
                        .addGroup(listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalEmpleadosLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 55, Short.MAX_VALUE))))
            .addGroup(listaPnl1Layout.createSequentialGroup()
                .addGroup(listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaPnl1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nota_LI_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarLALbl)
                            .addComponent(seleccionLALbl, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarLABtn)))
                    .addGroup(listaPnl1Layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(listaAsistenciaLALbl)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        listaPnl1Layout.setVerticalGroup(
            listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaPnl1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(agregarLALbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nota_LI_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(seleccionLALbl)
                .addGap(18, 18, 18)
                .addComponent(buscarLABtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(listaAsistenciaLALbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalEmpleadosLbl)
                .addGap(12, 12, 12)
                .addGroup(listaPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarLABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarLABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(devolverLABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        informacionTBn.addTab("Lista de eventos", listaPnl1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(opcionPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informacionTBn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(opcionPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(informacionTBn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        if(informacionTBn.isVisible()){
            if (JOptionPane.showConfirmDialog(this, "La información que"
                    + " esta modificando se perdera,¿Aun así desea cancelarla?",
                    "Precaucion", JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE) == 0) {
                limpiar();
                informacionTBn.setVisible(true);
            }
        } else { 
            limpiar();
            informacionTBn.setVisible(true);
        }
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        if(!nombreBuscarTFd.getText().equals(""))
            control.buscarPorNombre(nombreBuscarTFd.getText());
        else
            control.buscarTodos();
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void siguienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteBtnActionPerformed
        informacionTBn.setEnabledAt(0, false);
        informacionTBn.setEnabledAt(1, true);
        informacionTBn.setSelectedIndex(1);
    }//GEN-LAST:event_siguienteBtnActionPerformed

    private void proveedoresTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proveedoresTblMouseClicked
        int row = proveedoresTbl.rowAtPoint(evt.getPoint());
        int col = proveedoresTbl.columnAtPoint(evt.getPoint());
        if (col == 0){
            if(informacionTBn.isVisible()){
                if (JOptionPane.showConfirmDialog(this, "La información que"
                    + " esta modificando se perdera ¿Aun así desea cancelarla?",
                    "Precaucion", JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE) == 0) {
                    limpiar();
                    int id = Integer.parseInt((String) model.getValueAt(row, 0));
                    control.buscar(id);
                    guardarLABtn.setText("Modificar");
                    idProveedorActual = id;
                    proveedoresTbl.clearSelection();
                    informacionTBn.setVisible(true);
                }
            } else {
                limpiar();
                int id = Integer.parseInt((String) model.getValueAt(row, 0));
                control.buscar(id);
                guardarLABtn.setText("Modificar");
                idProveedorActual = id;
                proveedoresTbl.clearSelection();
                informacionTBn.setVisible(true);
            }
        }else if(col == 1) {
            int id = Integer.parseInt((String)model.getValueAt(row, 0));
            if(guardarLABtn.getText().equals("Modificar") && idProveedorActual == id){
                JOptionPane.showMessageDialog(this, "No se puede eliminar el proveedor que esta"
                    + " modificando actualmente.","Precaución", JOptionPane.ERROR_MESSAGE);
                model.setValueAt(false, row, 2);
                proveedoresTbl.clearSelection();
            }else if(JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este registro?",
                    "Precaución", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0){
                control.baja(id);
                control.buscarTodos();
            } else {
                model.setValueAt(false, row, 2);
                proveedoresTbl.clearSelection();
            }
        }
        proveedoresTbl.clearSelection();
    }//GEN-LAST:event_proveedoresTblMouseClicked
    
    private void externoRBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_externoRBtnMouseClicked
        internoRBtn.setSelected(false);
    }//GEN-LAST:event_externoRBtnMouseClicked

    private void internoRBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_internoRBtnMouseClicked
        externoRBtn.setSelected(false);
    }//GEN-LAST:event_internoRBtnMouseClicked

    private void primerNombreTFdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_primerNombreTFdFocusLost
        if (primerNombreTFd.getText().isEmpty()) {
            primerNombreTFd.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(255, 106, 106)),
                    BORDER_ORIGINAL));
            validNomLbl.setForeground(new Color(255, 0, 0));
        }
    }//GEN-LAST:event_primerNombreTFdFocusLost

    private void apellidoPaternoTFdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidoPaternoTFdFocusLost
        if (apellidoPaternoTFd.getText().isEmpty()) {
            apellidoPaternoTFd.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(255, 106, 106)),
                    BORDER_ORIGINAL));
            validApePatLbl.setForeground(new Color(255, 0, 0));
        }
    }//GEN-LAST:event_apellidoPaternoTFdFocusLost

    private void apellidoMaternoTFdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidoMaternoTFdFocusLost
        if (apellidoMaternoTFd.getText().isEmpty()) {
            apellidoMaternoTFd.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(255, 106, 106)),
                    BORDER_ORIGINAL));
            validApeMatLbl.setForeground(new Color(255, 0, 0));
        }
    }//GEN-LAST:event_apellidoMaternoTFdFocusLost

    private void informacionTBnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacionTBnMouseClicked
        
    }//GEN-LAST:event_informacionTBnMouseClicked

    private void informacionTBnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_informacionTBnStateChanged
        if(informacionTBn.getSelectedIndex()==1){

        }
    }//GEN-LAST:event_informacionTBnStateChanged

    private void cancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBtnActionPerformed
        if (JOptionPane.showConfirmDialog(this, "La información que"
            + " esta modificando se perdera,¿Aun así desea cancelarla?",
            "Precaucion", JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE) == 0) {
        limpiar();
        }
    }//GEN-LAST:event_cancelarBtnActionPerformed

    private void guardarLABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarLABtnActionPerformed
        almacenando = true;
        HashSet<Empleado> lisEmpleado = new HashSet();
        List<Object> atributos = new ArrayList();
        if (validacion()) {
            atributos.add(primerNombreTFd.getText());
            atributos.add(segundoNombreTFd.getText());
            atributos.add(apellidoPaternoTFd.getText());
            atributos.add(apellidoPaternoTFd.getText());
            atributos.add(correoTFd.getText());
            atributos.add(telefonoTFd.getText());
            if(internoRBtn.isSelected())
                atributos.add("1");
            else if(externoRBtn.isSelected())
                atributos.add("2");
            Set<Evento> cur=new HashSet<Evento>();
            for(int x=0; x < modelEventos.getRowCount(); x++){
                Evento cu = new Evento();
                cu.setId(Integer.parseInt(modelEventos.getValueAt(x, 0).toString()));
                cur.add(cu);
            }
            atributos.add(cur);
            buscando = true;
            problema = false;
            control.buscarTodos();
            if(!problema){
                if (guardarLABtn.getText().equals("Guardar")) {
                    control.alta(HelperEntidad.getProveedor(atributos));
                } else {
                    atributos.add(String.valueOf(idProveedorActual));
                    control.modificacion(HelperEntidad.getProveedor(atributos));
                }
                limpiar();
                control.buscarTodos();
            }
        }
        almacenando = false;
    }//GEN-LAST:event_guardarLABtnActionPerformed

    
    public boolean validacion(){
        boolean resultado = false;
        Pattern p = Pattern.compile(".+@.+");
        Matcher m = p.matcher(correoTFd.getText());
        if(primerNombreTFd.getText().equals("") &&
           apellidoPaternoTFd.getText().equals("")&&
           apellidoMaternoTFd.getText().equals("")&&
           correoTFd.getText().equals("") &&
           telefonoTFd.getText().equals("")){ 
            setMensaje("Debe ingresar los datos solicitados");
        }else if(primerNombreTFd.getText().equals("")) 
            setMensaje("Debe ingresar el primer nombre del proveedor");
        else if(apellidoPaternoTFd.getText().equals("")) 
            setMensaje("Debe ingresar el apellido paterno del proveedor");
        else if(apellidoMaternoTFd.getText().equals("")) 
            setMensaje("Debe ingresar el apellido materno del proveedor");
        else if(correoTFd.getText().equals("")) 
            setMensaje("Debe ingresar el correo del proveedor");
        else if(!m.matches() && !correoTFd.getText().equals("N/A"))
            setMensaje("Debe ingresar un formato de correo correcto");
        else if(telefonoTFd.getText().equals("")) 
            setMensaje("Debe ingresar el telefono del proveedor");
        else if(eventosTbl.getRowCount() <= 0)
            setMensaje("Debe ingresar eventos que el proveedor pueda impartir");
        else
            resultado = true;
        return resultado;
    }
    
    private void buscarLABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarLABtnActionPerformed
        ListaEventos lista = new ListaEventos(this);
        capacisoft.setEnabled(false);
        lista.setVisible(true);
        String[][] matriz = new String[modelEventos.getRowCount()]
            [modelEventos.getColumnCount()];
        for (int k = 0; k < modelEventos.getRowCount(); k++) {
            for (int j = 0; j < modelEventos.getColumnCount(); j++) {
                matriz[k][j] = modelEventos.getValueAt(k, j) + "";
            }
        }
        if (eventosTbl.getRowCount() > 0) {
            lista.mandarTabla(matriz);
        }
    }//GEN-LAST:event_buscarLABtnActionPerformed

    private void cancelarLABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarLABtnActionPerformed
        if (JOptionPane.showConfirmDialog(this, "La información que"
            + " esta modificando se perdera,¿Aun así desea cancelarla?",
            "Precaucion", JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE) == 0) {
            limpiar();
        }
    }//GEN-LAST:event_cancelarLABtnActionPerformed

    private void devolverLABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverLABtnActionPerformed
        informacionTBn.setEnabledAt(0, true);
        informacionTBn.setEnabledAt(1, false);
        informacionTBn.setSelectedIndex(0);
    }//GEN-LAST:event_devolverLABtnActionPerformed

    private void primerNombreTFdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_primerNombreTFdFocusGained
        primerNombreTFd.setBorder(BORDER_ORIGINAL);
        validNomLbl.setForeground(new Color(213, 216, 222));
    }//GEN-LAST:event_primerNombreTFdFocusGained

    private void apellidoPaternoTFdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidoPaternoTFdFocusGained
        apellidoPaternoTFd.setBorder(BORDER_ORIGINAL);
        validApePatLbl.setForeground(new Color(213, 216, 222));
    }//GEN-LAST:event_apellidoPaternoTFdFocusGained

    private void apellidoMaternoTFdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidoMaternoTFdFocusGained
        apellidoMaternoTFd.setBorder(BORDER_ORIGINAL);
        validApeMatLbl.setForeground(new Color(213, 216, 222));
    }//GEN-LAST:event_apellidoMaternoTFdFocusGained

    private void telefonoTFdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telefonoTFdFocusGained
        telefonoTFd.setBorder(BORDER_ORIGINAL);
        validTelefonoLbl.setForeground(new Color(213, 216, 222));
    }//GEN-LAST:event_telefonoTFdFocusGained

    private void correoTFdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_correoTFdFocusGained
        correoTFd.setBorder(BORDER_ORIGINAL);
        validCorreoLbl.setForeground(new Color(213, 216, 222));
    }//GEN-LAST:event_correoTFdFocusGained

    private void correoTFdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_correoTFdFocusLost
        Pattern p = Pattern.compile(".+@.+");
        Matcher m = p.matcher(correoTFd.getText());
        if (correoTFd.getText().isEmpty()) {
            correoTFd.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(255, 106, 106)),
                    BORDER_ORIGINAL));
            validCorreoLbl.setText("Este campo es obligatorio");
            validCorreoLbl.setForeground(new Color(255, 0, 0));
        }else if(!m.matches() && !correoTFd.getText().equals("N/A")){
            correoTFd.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(255, 106, 106)),
                    BORDER_ORIGINAL));
            validCorreoLbl.setText("No es el formato correcto");
            validCorreoLbl.setForeground(new Color(255, 0, 0));
        }
    }//GEN-LAST:event_correoTFdFocusLost

    private void telefonoTFdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telefonoTFdFocusLost
        if (telefonoTFd.getText().isEmpty()) {
            telefonoTFd.setBorder(BorderFactory.createCompoundBorder(
                    BorderFactory.createLineBorder(new Color(255, 106, 106)),
                    BORDER_ORIGINAL));
            validTelefonoLbl.setForeground(new Color(255, 0, 0));
        }
    }//GEN-LAST:event_telefonoTFdFocusLost

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarBtn;
    private javax.swing.JLabel agregarLALbl;
    private javax.swing.JLabel agregarLbl;
    private javax.swing.JLabel agregarMsjLbl;
    private javax.swing.JLabel apellidoMaternoLbl;
    private javax.swing.JTextField apellidoMaternoTFd;
    private javax.swing.JLabel apellidoPaternoLbl;
    private javax.swing.JTextField apellidoPaternoTFd;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JButton buscarLABtn;
    private javax.swing.JButton cancelarBtn;
    private javax.swing.JButton cancelarLABtn;
    private javax.swing.JLabel correoLbl;
    private javax.swing.JTextField correoTFd;
    private javax.swing.JButton devolverLABtn;
    private javax.swing.JTable eventosTbl;
    private javax.swing.JRadioButton externoRBtn;
    private javax.swing.JButton guardarLABtn;
    private javax.swing.JPanel informacionPnl;
    private javax.swing.JTabbedPane informacionTBn;
    private javax.swing.JRadioButton internoRBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel listaAsistenciaLALbl;
    private javax.swing.JPanel listaPnl1;
    private javax.swing.JTextField nombreBuscarTFd;
    private javax.swing.JLabel nombreLBuscarbl;
    private javax.swing.JLabel nota_LI_Lbl;
    private javax.swing.JLabel opcionMsjLbl;
    private javax.swing.JPanel opcionPnl;
    private javax.swing.JLabel opcionesLbl;
    private javax.swing.JLabel primerNombreLbl;
    private javax.swing.JTextField primerNombreTFd;
    private javax.swing.JTable proveedoresTbl;
    private javax.swing.JLabel segundoNombreLbl;
    private javax.swing.JTextField segundoNombreTFd;
    private javax.swing.JLabel seleccionLALbl;
    private javax.swing.JButton siguienteBtn;
    private javax.swing.JLabel tablaMsjLbl;
    private javax.swing.JLabel telefonoLbl;
    private javax.swing.JTextField telefonoTFd;
    private javax.swing.JLabel tipoLbl;
    private javax.swing.JLabel totalEmpleadosLbl;
    private javax.swing.JLabel validApeMatLbl;
    private javax.swing.JLabel validApePatLbl;
    private javax.swing.JLabel validCorreoLbl;
    private javax.swing.JLabel validNomLbl;
    private javax.swing.JLabel validTelefonoLbl;
    // End of variables declaration//GEN-END:variables

    public void llenarTodo(){
        limpiar();
        control.buscarTodos();
    }
    
    private void limpiar(){
        primerNombreTFd.setText("");
        segundoNombreTFd.setText("");
        apellidoPaternoTFd.setText("");
        apellidoMaternoTFd.setText("");
        telefonoTFd.setText("");
        correoTFd.setText("");
        guardarLABtn.setText("Guardar");
        totalEmpleadosLbl.setText("Total de eventos en la lista: ");
        modelEventos.setRowCount(0);
        informacionTBn.setEnabledAt(0, true);
        informacionTBn.setEnabledAt(1, false);
        informacionTBn.setSelectedIndex(0);
        primerNombreTFd.setBorder(BORDER_ORIGINAL);
        segundoNombreTFd.setBorder(BORDER_ORIGINAL);
        apellidoPaternoTFd.setBorder(BORDER_ORIGINAL);
        apellidoMaternoTFd.setBorder(BORDER_ORIGINAL);
        telefonoTFd.setBorder(BORDER_ORIGINAL);
        correoTFd.setBorder(BORDER_ORIGINAL);
        validApeMatLbl.setForeground(new Color(213, 216, 222));
        validApePatLbl.setForeground(new Color(213, 216, 222));
        validTelefonoLbl.setForeground(new Color(213, 216, 222));
        validNomLbl.setForeground(new Color(213, 216, 222));
        validCorreoLbl.setForeground(new Color(213, 216, 222));
        informacionTBn.setVisible(false);
    }
    
    @Override
    public void setMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    @Override
    public void setTabla(String[][] info) {
        if (info[0][0].contains("TLE1")) {
            info[0][0] = info[0][0].replaceAll("TLE1", "");
            modelEventos.setDataVector(info, titulosEventos);
            TableColumn tc = eventosTbl.getColumnModel().getColumn(0);
            eventosTbl.getColumnModel().removeColumn(tc);
            totalEmpleadosLbl.setText("Total de eventos en la lista: " + 
                    eventosTbl.getRowCount() + "");
        }else if(buscando){
            buscando = false;
            if(info!=null){
                for(int x = 0; x < info.length; x++){
                    String nombreAIngresar = String.join(" ", primerNombreTFd.getText(),
                        segundoNombreTFd.getText(), apellidoPaternoTFd.getText(),
                        apellidoMaternoTFd.getText());
                    if(info[x][1].equals(nombreAIngresar)){
                        if(guardarLABtn.getText().equals("Modificar") &&
                        info[x][0].equals(String.valueOf(idProveedorActual))){
                            continue;
                        }
                        if(almacenando){
                            setMensaje("Ya existe el nombre de proveedor\n"+info[x][1]);
                        }
                        problema = true;
                        break;
                    }
                }
            }
        }else if(guardando==true){
            idProveedorActual=Integer.parseInt(info[0][0]);
        }else if(info != null){
            model.setRowCount(0);
            model.setDataVector(info, titulosTabla);
            TableColumn tc = proveedoresTbl.getColumnModel().getColumn(2);
            tc.setCellEditor(proveedoresTbl.getDefaultEditor(Boolean.class));
            tc.setCellRenderer(proveedoresTbl.getDefaultRenderer(Boolean.class));
            tc = proveedoresTbl.getColumnModel().getColumn(0);
            proveedoresTbl.getColumnModel().removeColumn(tc);
            proveedoresTbl.getColumnModel().getColumn(0).setPreferredWidth(300);
        }else{
            setMensaje("No se encontraron coincidencias");
        }
        
    }

    @Override
    public void setInfo(List info) {
        if (info.get(0).equals("Desbloquear")) {
            capacisoft.setEnabled(true);
            capacisoft.setVisible(true);
        }else if(buscando){
            if(info!=null){                
                primerNombre= primerNombreTFd.getText();
                segundoNombre=segundoNombreTFd.getText();
                apellidoPaterno=apellidoPaternoTFd.getText();
                apellidoMaterno=apellidoMaternoTFd.getText();
                if(primerNombre.equals(info.get(0).toString()) &&
                   apellidoPaterno.equals(info.get(2).toString())&&
                   apellidoMaterno.equals(info.get(3).toString()) &&
                   segundoNombre.equals(info.get(1).toString())){
                    buscando=false;
                    setMensaje("Ya existe el nombre del empleado\n"
                            +primerNombre+" "
                            +segundoNombre+" "
                            +apellidoPaterno+" "
                            +apellidoMaterno);
                }
            }    
        }else{
            primerNombreTFd.setText(info.get(0).toString());
            segundoNombreTFd.setText(info.get(1).toString());
            apellidoPaternoTFd.setText(info.get(2).toString());
            apellidoMaternoTFd.setText(info.get(3).toString());
            correoTFd.setText(info.get(4).toString());
            switch(info.get(5).toString()){
                case "Interno": internoRBtn.setSelected(true); break;
                case "Externo": externoRBtn.setSelected(true); break;
            }
            Set<Evento> ev=(Set<Evento>) info.get(6);
            List<Object> eventos = new ArrayList();
            eventos.addAll(ev);
            String[][] matrizEventos = HelperEntidad.descomponerObjetos(eventos);
            modelEventos.setDataVector(matrizEventos, titulosEventos);
            totalEmpleadosLbl.setText("Total de eventos en la lista: " + 
                    eventosTbl.getRowCount() + "");
            telefonoTFd.setText(info.get(7).toString());
        }
    }

    @Override
    public void setLista(List info, int i) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void llenarDatos(Object evento) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
